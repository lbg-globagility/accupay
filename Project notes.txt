Goldwings Stationery Products, Inc.

# ################################################ #

2017-04-07

DB : goldwingspayrolldb_planetmar

TABLES

	- employeesalary -- newly added columns

FUNCTIONS

	- INSUPD_employeesalary -- new content & added parameters
	
TRIGGERS

	- BEFINS_employeesalary -- new content
	
	- BEFUPD_employeesalary -- new content

# ################################################ #

2017-03-15

DB : goldwingspayrolldb_reset

TRIGGERS

	- BEFINS_employeesalary -- new content
	
	- BEFUPD_employeesalary -- new content

# ################################################ #

2017-02-17

DB : goldwingspayrolldb_curr

VIEWS

	- payperiod_totalperiods -- newly added object
	
	- paystubitem_sum_daily_allowance_group_prodid -- new content

	- paystubitem_sum_semimon_allowance_group_prodid -- new content

PROCEDURE

	- INSUPDPROC_paystub -- newly added object

# ################################################ #

            Dim emp_count = employee_dattab.Rows.Count

            Static max_rec_perpage As Integer = 20
            Dim process_seconds As Integer = max_rec_perpage * 1000
            Dim loop_max_ctr = emp_count / max_rec_perpage
            loop_max_ctr = (loop_max_ctr - (loop_max_ctr Mod 1)) + 1

            ReDim multi_threads(loop_max_ctr)
            multithreads.Clear()
            Dim i = 0

            Dim SpDataSet As DataSet = New DataSet
            Dim SpCmd As MySqlCommand = New MySqlCommand
            Dim conn_bool As Boolean = False
            Try

                SpCmd = New MySqlCommand("EMPLOYEE_payrollgen_paginate", New MySql.Data.MySqlClient.MySqlConnection("server=localhost;user id=root;password=globagility;database=goldwingspayrolldb_curr;"))
                With SpCmd
                    conn_bool = (.Connection.State = ConnectionState.Closed)
                    If conn_bool Then
                        .Connection.Open()
                    End If
                    .CommandTimeout = 5000
                    .CommandType = CommandType.StoredProcedure
                    .Parameters.Clear()
                    .Parameters.AddWithValue("OrganizID", orgztnID)
                    .Parameters.AddWithValue("Pay_Date_From", paypFrom)
                    .Parameters.AddWithValue("Pay_Date_To", paypTo)
                    .Parameters.AddWithValue("max_rec_perpage", max_rec_perpage)
                End With

                Dim MyAdapter As MySqlDataAdapter = New MySqlDataAdapter(SpCmd)
                MyAdapter.Fill(SpDataSet)

                'For Each dt As DataTable In SpDataSet.Tables
                '    MsgBox(dt.TableName)
                'Next

            Catch ex As Exception
                MsgBox(getErrExcptn(ex, Me.Name))
            Finally
                SpCmd.Connection.Close()
                SpCmd.Dispose()
            End Try

            Dim tasks As New List(Of Task)

            'Task.Factory.StartNew(Sub()
            Dim tblcount As Integer = SpDataSet.Tables.Count

            ReDim array_bgwork(tblcount - 1)

            For Each dt As DataTable In SpDataSet.Tables

                If dt.Rows.Count > 0 Then

                    Dim n_PayrollGeneration As New PayrollGeneration(dt,
                                                                      isEndOfMonth,
                                                                      esal_dattab,
                                                                      emp_loans,
                                                                      emp_bonus,
                                                                      emp_allowanceDaily,
                                                                      emp_allowanceMonthly,
                                                                      emp_allowanceOnce,
                                                                      emp_allowanceSemiM,
                                                                      emp_allowanceWeekly,
                                                                      notax_allowanceDaily,
                                                                      notax_allowanceMonthly,
                                                                      notax_allowanceOnce,
                                                                      notax_allowanceSemiM,
                                                                      notax_allowanceWeekly,
                                                                      emp_bonusDaily,
                                                                      emp_bonusMonthly,
                                                                      emp_bonusOnce,
                                                                      emp_bonusSemiM,
                                                                      emp_bonusWeekly,
                                                                      notax_bonusDaily,
                                                                      notax_bonusMonthly,
                                                                      notax_bonusOnce,
                                                                      notax_bonusSemiM,
                                                                      notax_bonusWeekly,
                                                                      numofdaypresent,
                                                                      etent_totdaypay,
                                                                      dtemployeefirsttimesalary,
                                                                      prev_empTimeEntry,
                                                                      VeryFirstPayPeriodIDOfThisYear,
                                                                      withthirteenthmonthpay)

                    With n_PayrollGeneration
                        .PayrollDateFrom = paypFrom
                        .PayrollDateTo = paypTo
                        .PayrollRecordID = paypRowID

                        array_bgwork(i) = New System.ComponentModel.BackgroundWorker()
                        AddHandler array_bgwork(i).DoWork, AddressOf .PayrollGeneration_BackgourndWork

                        array_bgwork(i).RunWorkerAsync()
                        Thread.Sleep(process_seconds)
                    End With

                    'tasks.Add(
                    '    Task.Factory.StartNew(Sub()
                    '                              n_PayrollGeneration.DoProcess()

                    '                              _uiTasks.StartNew(Sub()
                    '                                                    'Thread.Sleep(1000)
                    '                                                End Sub)

                    '                          End Sub)
                    '                      )
                    ''Thread.Sleep(3000)
                    ''ThreadPool.QueueUserWorkItem(New WaitCallback(AddressOf n_PayrollGeneration.DoProcess))
                    'Dim objNewThread As Thread = New Thread(AddressOf n_PayrollGeneration.DoProcess)

                    'objNewThread.IsBackground = True

                    'objNewThread.Start()

                    'multi_threads(i) = objNewThread
                    'multithreads.Add(objNewThread)

                    'Thread.Sleep(3500)

                    i += 1

                Else
                    Continue For
                End If

            Next

            '    _uiTasks.StartNew(Sub()

            '                      End Sub)

            'End Sub)

            'Task.WaitAll(tasks.ToArray())

            Dim callthem = "Hey, over here"

            'Dim valid_threads = multi_threads.Cast(Of Thread).Where(Function(x) x IsNot Nothing)

            'Dim thread_counter = valid_threads.Count

            'Dim thereAreThreadStillRunning As Boolean = Recursive(True)

            'callthem = "Hey, over here"

            ''            If Thread.CurrentThread.ThreadState = ThreadState.Running Then
            ''                GoTo fsfsdf
            ''            End If

            ''fsfsdf:     If Thread.CurrentThread.ThreadState = ThreadState.Running Then : GoTo fsfsdf : End If

            ''Dim n_ImportLoans As New ImportLoans(catchDatSet, Me)

            ''Dim objNewThread As New Thread(AddressOf n_ImportLoans.StartProcess)

            ''objNewThread.IsBackground = True

            ''objNewThread.Start()

            ''threadArrayList.Add(objNewThread)

# ################################################ #

USE goldwingspayrolldb_curr;

SELECT * FROM employee WHERE EmployeeID=5035 AND OrganizationID=3;

SELECT * FROM employeeloanschedule WHERE EmployeeID=104 AND OrganizationID=3;

# USE goldwingspayrolldb_curr; DELETE FROM employeeloanschedule WHERE RowID=174; ALTER TABLE employeeloanschedule AUTO_INCREMENT = 0;

# ################################################ #

SET GLOBAL innodb_lock_wait_timeout = 5000;

SET innodb_lock_wait_timeout = 5000;

**deadlock found when trying to get lock; try restarting transaction

**unable to read data from the transport connection: A connection attempt failed because the connected party did not properly respond after a period of time, or established connection failed because connected

**value cannot be null.
parameter name: SafeHandle cannot be null

**System.Reflection.TargetInvocationException was unhandled
Message: An unhandled exception of type 'System.Reflection.TargetInvocationException' occurred in mscorlib.dll
Additional information: Exception has been thrown by the target of an invocation.

# ################################################ #

1st half of the month
	- PAGIBIG

2nd half of the month
	- SSS & PhilHealth

# ################################################ #

2017-01-30

DB :	goldwingspayrolldb_curr

PROCEDURES

	- UPD_employeeshift -- new content

# ################################################ #

2017-01-30

DB :	goldwingspayrolldb_curr

**ang problema natin sa `BEFUPD_employeetimeentry` line 160 (observe this (all_leave_hours) * (daily_rate / hours_of_duty))

FUNCTIONS

	- GENERATE_employeetimeentry -- new content

TRIGGERS

	- BEFINS_employee -- new content
	
	- BEFUPD_employee -- new content

	- BEFINS_employeeshift -- newly added object
	
	- BEFUPD_employeeshift -- newly added object

# ################################################ #

2017-01-27

DB :	goldwingspayrolldb_curr

* Newly added `Loan type` (product.Category) :  COMPANY LOAN, ADVANCE TO EMPLOYEES, OTHER LOAN

# ################################################ #

2017-01-20

DB :	goldwingspayrolldb_curr

TRIGGERS

	- AFTUPD_employee_then_employeesalary -- new content
	
	- BEFINS_employeesalary -- new content
	
	- BEFUPD_employeesalary -- new content

# ################################################ #

2017-01-17

DB :	goldwingspayrolldb_curr

TRIGGERS

	- AFTINS_user -- new content

# ################################################ #

2017-01-16

DB :	goldwingspayrolldb_curr
		
PROCEDURES

	- VIEW_position_organization_user -- new content

TRIGGERS

	- BEFINS_position_view -- new content

	- BEFUPD_position_view -- new content

# ################################################ #

2017-01-13

After installation and when printing pay slip

ERROR PROMPTS :

	application has stopped working

	a problem caused the program to stop working correctly. windows will close the program and notify you if a solution is available

# ################################################ #

2017-01-12

DB :	goldwingspayrolldb_curr
		
TRIGGERS

	- BEFINS_withholdingtaxreport -- newly added object
	
	- BEFUPD_withholdingtaxreport -- newly added object

# ################################################ #

2017-01-11

DB :	goldwingspayrolldb
		,goldwingspayrolldb_curr

TABLES

	- position_view -- newly added column `AllowedToAccess`

FUNCTIONS

	- INSUPD_position_view -- new content

	- VIEW_privilege -- new content

TRIGGERS

	- BEFINS_position_view -- newly added object

	- BEFUPD_position_view -- newly added object

# ################################################ #

2016-12-07

SPECIAL NOTES

	- (NEEDS APPROVAL) leave balances can be convert to cash

	- leave balance of newly regularized employee is prorated

	- leave balance of an employee resets every year

	- loan renewals (previous loan record of an employee will be revised)

	- salary is always declared, and all actual amount of salary treat as allowance

	- add a column in organization table, to set whether the leave balance is accrued or annully resets
	
# ################################################ #

2016-12-01

DB : goldwingspayrolldb

FUNCTIONS

	- INSUPD_employeeleave -- new content
