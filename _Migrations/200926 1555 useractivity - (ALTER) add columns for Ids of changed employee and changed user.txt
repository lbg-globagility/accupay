ALTER TABLE `useractivityitem`
	ALTER `EntityId` DROP DEFAULT;
ALTER TABLE `useractivityitem`
	COMMENT='EntityId = RowID of the changed record\r\nChangedEmployeeId = If the activity involves an employee, set this to the RowID of the Employee\r\nChangedUserId = If the activity involves modifying a user, set this to the Id of the User (for example, changing the email of user)',
	CHANGE COLUMN IF EXISTS `EntityId` `EntityId` INT(11) NOT NULL COMMENT 'The RowID of the created/updated/delete Id' AFTER `UserActivityId`,
	ADD COLUMN IF NOT EXISTS `ChangedEmployeeId` INT(11) NULL DEFAULT NULL COMMENT 'If the activity involves an employee, set this to the RowID of the Employee' AFTER `EntityId`,
	ADD COLUMN IF NOT EXISTS`ChangedUserId` INT(11) NULL DEFAULT NULL COMMENT 'If the activity involves modifying a user, set this to the Id of the User' AFTER `ChangedEmployeeId`,
	ADD CONSTRAINT `FK_useractivityitem_employee_ChangedEmployeeId` FOREIGN KEY (`ChangedEmployeeId`) REFERENCES `employee` (`RowID`),
	ADD CONSTRAINT `FK_useractivityitem_aspnetusers_ChangedUserId` FOREIGN KEY (`ChangedUserId`) REFERENCES `aspnetusers` (`Id`);



UPDATE useractivityitem a
INNER JOIN useractivity b
ON a.UserActivityId = b.RowID
AND b.EntityName = 'Attachment'
INNER JOIN employeeattachments c
ON a.EntityId = c.RowID
SET a.ChangedEmployeeId = c.EmployeeID
;

UPDATE useractivityitem a
INNER JOIN useractivity b
ON a.UserActivityId = b.RowID
AND b.EntityName = 'Award'
INNER JOIN employeeawards c
ON a.EntityId = c.RowID
SET a.ChangedEmployeeId = c.EmployeeID
;

UPDATE useractivityitem a
INNER JOIN useractivity b
ON a.UserActivityId = b.RowID
AND b.EntityName = 'Bonus'
INNER JOIN employeebonus c
ON a.EntityId = c.RowID
SET a.ChangedEmployeeId = c.EmployeeID
;

UPDATE useractivityitem a
INNER JOIN useractivity b
ON a.UserActivityId = b.RowID
AND b.EntityName = 'Certification'
INNER JOIN employeecertification c
ON a.EntityId = c.RowID
SET a.ChangedEmployeeId = c.EmployeeID
;

UPDATE useractivityitem a
INNER JOIN useractivity b
ON a.UserActivityId = b.RowID
AND b.EntityName = 'Disciplinary Action'
INNER JOIN employeedisciplinaryaction c
ON a.EntityId = c.RowID
SET a.ChangedEmployeeId = c.EmployeeID
;

UPDATE useractivityitem a
INNER JOIN useractivity b
ON a.UserActivityId = b.RowID
AND b.EntityName = 'Educational Background'
INNER JOIN employeeeducation c
ON a.EntityId = c.RowID
SET a.ChangedEmployeeId = c.EmployeeID
;

UPDATE useractivityitem a
INNER JOIN useractivity b
ON a.UserActivityId = b.RowID
AND b.EntityName = 'Previous Employer'
INNER JOIN employeepreviousemployer c
ON a.EntityId = c.RowID
SET a.ChangedEmployeeId = c.EmployeeID
;

UPDATE useractivityitem a
INNER JOIN useractivity b
ON a.UserActivityId = b.RowID
AND b.EntityName = 'Salary'
INNER JOIN employeesalary c
ON a.EntityId = c.RowID
SET a.ChangedEmployeeId = c.EmployeeID
;

UPDATE useractivityitem a
INNER JOIN useractivity b
ON a.UserActivityId = b.RowID
AND b.EntityName = 'Employee'
INNER JOIN employee c
ON a.EntityId = c.RowID
SET a.ChangedEmployeeId = c.RowID
;

UPDATE useractivityitem a
INNER JOIN useractivity b
ON a.UserActivityId = b.RowID
AND b.EntityName = 'Allowance'
INNER JOIN employeeallowance c
ON a.EntityId = c.RowID
SET a.ChangedEmployeeId = c.EmployeeID
;

UPDATE useractivityitem a
INNER JOIN useractivity b
ON a.UserActivityId = b.RowID
AND b.EntityName = 'Loan'
INNER JOIN employeeloanschedule c
ON a.EntityId = c.RowID
SET a.ChangedEmployeeId = c.EmployeeID
;

UPDATE useractivityitem a
INNER JOIN useractivity b
ON a.UserActivityId = b.RowID
AND b.EntityName = 'Leave'
INNER JOIN employeeleave c
ON a.EntityId = c.RowID
SET a.ChangedEmployeeId = c.EmployeeID
;

UPDATE useractivityitem a
INNER JOIN useractivity b
ON a.UserActivityId = b.RowID
AND b.EntityName = 'Official Business'
INNER JOIN employeeofficialbusiness c
ON a.EntityId = c.RowID
SET a.ChangedEmployeeId = c.EmployeeID
;

UPDATE useractivityitem a
INNER JOIN useractivity b
ON a.UserActivityId = b.RowID
AND b.EntityName = 'Overtime'
INNER JOIN employeeovertime c
ON a.EntityId = c.RowID
SET a.ChangedEmployeeId = c.EmployeeID
;

UPDATE useractivityitem a
INNER JOIN useractivity b
ON a.UserActivityId = b.RowID
AND b.EntityName = 'Shift Schedule'
INNER JOIN shiftschedules c
ON a.EntityId = c.RowID
SET a.ChangedEmployeeId = c.EmployeeID
;

UPDATE useractivityitem a
INNER JOIN useractivity b
ON a.UserActivityId = b.RowID
AND b.EntityName = 'Time Log'
INNER JOIN employeetimeentrydetails c
ON a.EntityId = c.RowID
SET a.ChangedEmployeeId = c.EmployeeID
;
